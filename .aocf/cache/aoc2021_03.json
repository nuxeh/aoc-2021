{
  "year": 2021,
  "day": 3,
  "level": "second",
  "title": "Binary Diagnostic",
  "stars": 2,
  "solution": {
    "second": "1370737",
    "first": "775304"
  },
  "input": "011110011110\n101101001111\n000000010101\n100111001010\n110000011010\n011101010101\n011110001100\n010111111001\n111011100101\n011110000110\n010100001111\n000001001100\n110001001000\n001000100101\n010100011110\n010111011110\n110101001111\n011010111011\n000011010101\n100111011100\n010010100011\n010010011001\n000111010011\n111001000111\n100101111111\n011001101110\n110010101100\n001000010001\n110101100011\n101110001011\n010100000110\n001110011110\n011101100110\n001111101101\n000101101000\n100110000111\n000001010100\n111100010110\n000100100100\n001000110001\n101000001011\n101000100110\n110000101010\n010111110000\n111110010110\n011011111111\n111010100000\n100001000111\n011000001010\n011000010001\n101101100001\n011001101011\n111001001010\n000010110101\n101110100010\n001111111101\n011110001001\n000111100011\n010101001001\n111110111111\n111000111010\n001001111100\n000011000001\n011100010110\n110010000111\n000010010101\n110000001110\n010011111011\n001010100100\n111001010101\n001101000011\n110100110011\n110010100101\n001000001011\n111110011000\n110111011011\n110110101001\n010010100100\n111100001100\n100100001100\n110001111010\n111011001011\n010000010001\n110010100000\n010100011100\n000110001001\n010011000001\n111011010001\n010011111101\n111101110100\n110110101100\n010100111110\n100011001101\n000010000010\n011111100001\n100000101100\n100001110011\n100101100100\n000100001001\n101000000011\n110111101100\n100100101001\n001001101001\n000001010000\n001001111110\n111011111010\n001000011110\n110000100111\n010010010101\n011010001011\n100010010101\n010110101010\n011111001011\n110010011100\n111110101010\n000001111010\n111101110101\n101010110111\n100010101111\n000110101110\n000000010000\n000010100110\n111110010001\n000100110000\n110010011011\n101001000010\n010110000101\n100011100100\n110000110100\n110011000001\n101110001000\n010100011111\n111000100111\n110001100010\n100001101000\n101001000111\n111110100000\n000011000010\n110000000001\n111010000111\n100100111011\n101101110001\n111100110100\n100110010000\n001001001110\n100010001001\n101000110100\n011100001111\n001110100110\n110100001100\n101101001011\n000011111110\n101101010100\n000110110001\n011100011001\n111000111111\n011010101100\n111000100101\n100111011110\n011010100110\n110000101111\n110010000001\n100001110101\n110101011111\n111111000011\n101010010010\n000111111111\n000001001111\n101101010010\n111111001000\n001001110000\n110010011110\n110011001111\n100111101011\n011111000111\n110010111100\n010110000000\n110001100011\n111000100001\n011000101000\n100110001100\n001101011011\n011001111110\n011101000110\n110110111001\n110101001010\n111000111011\n100111010001\n100110000011\n010001000100\n001001001000\n010010001010\n010101101101\n001110001001\n101110011111\n010111001111\n110111001110\n100000101011\n010000111111\n101000101011\n101011010111\n000101110001\n100100010010\n100111011101\n111100000100\n100110000001\n000001000101\n101100001111\n100000101001\n010101010110\n000110010111\n011101001100\n000111111011\n000001100101\n100001011011\n111000101110\n111101100111\n011010010100\n101001001010\n110100110001\n111101011101\n000011101110\n011000100100\n101110000111\n011101110110\n111001010001\n011110000100\n011110001101\n100111100001\n010011100001\n001001101101\n001111111010\n010101000101\n011100000110\n100010001101\n011011101011\n110111001010\n101000010010\n111111100011\n000101111011\n001101010011\n100101000001\n101101100011\n101110010011\n011001100000\n110001111111\n011100101100\n010010001110\n111110101101\n010110001000\n000011000110\n101010011011\n000100111011\n001000111101\n010011111111\n011101100111\n111111011111\n001100000000\n101100001110\n101100001000\n100001011111\n100001000101\n000101011001\n010100111100\n110000111011\n010000111100\n011100110000\n101111110010\n100011110101\n100100110101\n100001100000\n101000100101\n111000001100\n010000001011\n110101010111\n011011001000\n100111000101\n011000000100\n110110011000\n101101101101\n100101110010\n001100001010\n010111000011\n111111100001\n100010111011\n110011001001\n000011011101\n001100101101\n010110011001\n111100110010\n011111001110\n100110001111\n000111101111\n011000110001\n001010001010\n000111010100\n010011110101\n011111000010\n000101000010\n111101011010\n110011111100\n100000001000\n100001000110\n101010100001\n000101000101\n100100011111\n110000101110\n000110000101\n001001011111\n100010011100\n000001110001\n110000010100\n011111010100\n001000001111\n000111000001\n110010001000\n001001111101\n111000001001\n001011000001\n111110010100\n110010001100\n010110110000\n011100100010\n011000101011\n001001000001\n011001001110\n111000010100\n000110000110\n011011000100\n011000010111\n110001011000\n010111011000\n000101110100\n000000011111\n001100111100\n000010100101\n000111110000\n000110000001\n000100101001\n101111110100\n010010000001\n001100010001\n101111001101\n111011111101\n000011110011\n111001011100\n010110110110\n000000001101\n010010000000\n000001010011\n101000010000\n101000001110\n010001000111\n111010011011\n101001111110\n000110101100\n100110101001\n100111111111\n101001101001\n110010010011\n011001011111\n111111110110\n101110010110\n100100001101\n010001111110\n111111101000\n100010100001\n011110010100\n101000110011\n010110110011\n011111001000\n100010100101\n110010010110\n111011001000\n101110001101\n000010110011\n001110100100\n100000011101\n011001100001\n011001101010\n001100011101\n000111101100\n001010001001\n111001101110\n110110001111\n001111001010\n001001000011\n001000010000\n000001111110\n000101101111\n001001000110\n100001101110\n101111011100\n111110010010\n010001100011\n101000100111\n001101000111\n111011110011\n000011000101\n111101001110\n110111111111\n011100010100\n110011110001\n001011011001\n000011010111\n011000001110\n000101010111\n110101110001\n001100001111\n110111010111\n110010010101\n100111100111\n101000000111\n101111000100\n100011100010\n000100100101\n111011110110\n001111100110\n011011000010\n100010010100\n010111110010\n100010110011\n111111111000\n011010101111\n101110111011\n101110101010\n001011001000\n110110001011\n110100101111\n001011001011\n110011010000\n000000100000\n100000110000\n101110011011\n100101101111\n010110100010\n000010100011\n000110110000\n111101000001\n011001010011\n000000001110\n000100110101\n111111111110\n001010101001\n001101100111\n010100000101\n000111001001\n101100101110\n011011110111\n011010000011\n000100101011\n100001100110\n000111011101\n000100011100\n000101100101\n011111111110\n111010111011\n100000100101\n011001011110\n010101100010\n010101111101\n100001000001\n001000100001\n010010111110\n100011001011\n011011000111\n110011010101\n111101100100\n001110001010\n110011111101\n111011011101\n001101000001\n101011011011\n100000111010\n010101110101\n000101011100\n011000011001\n111001010011\n100100010110\n111101010001\n110110011011\n011110110100\n101000110101\n101110111101\n011011011110\n000100110110\n100011011111\n111010101001\n011111011000\n101000101110\n110010111001\n111010000010\n110011011001\n110110010100\n111010011010\n000010110001\n011101100010\n110010110111\n010101001111\n011011001101\n101111000110\n010111010010\n101111011011\n100111101100\n001000001101\n010110100000\n001010100110\n111111000111\n100101000100\n100101001100\n110111010110\n101000101000\n100001001111\n110011110010\n111111101111\n110001111000\n010001110110\n101100000010\n000110000111\n001011100101\n101010100101\n110110001001\n000011011111\n110110101110\n101100110010\n101110101110\n101010110101\n000111000011\n101000011111\n001100000111\n101001111111\n100100011101\n111100011011\n000010111010\n111010101010\n101001010010\n101100010011\n010000110110\n011110110011\n001101110111\n110111110110\n001011000100\n101111100010\n011010011100\n110100001010\n100100110111\n000011010011\n000110111010\n001100100000\n100111011011\n001101101011\n101011101111\n001101100100\n111010010111\n100111111100\n101101000100\n000011111100\n011111001101\n110101001101\n011100100110\n101011000000\n100001010011\n011110111110\n011011100110\n110001011010\n111111110101\n001111111000\n100010011011\n100001101100\n110011010100\n100011000001\n011110111001\n010111110110\n100110001010\n100000000011\n001001101111\n101111011010\n010000110100\n101001011110\n100100011000\n101101000111\n011101001001\n010101110010\n000110000000\n000100111000\n010110111010\n110000011111\n011001011100\n010100110110\n011111110011\n111011011010\n001000101011\n000010110100\n011100101000\n111111100110\n011001110100\n000100011000\n010101010111\n001011101000\n001000011100\n110101101100\n010001000010\n001010010000\n111000110001\n101111111111\n011101011110\n001001111010\n001000100110\n000011011001\n100101100001\n110111000000\n100111011111\n111000110000\n110010111111\n000010010011\n100001100111\n010110100100\n001101001010\n101001100110\n010001110101\n001011000010\n010111110101\n000001001110\n010010100110\n111011001110\n101011111001\n000100000000\n111101001100\n100111011010\n000010010001\n100000010000\n101101000010\n110100010100\n111011111000\n101001100100\n001110101011\n000111001010\n111110000011\n001110100101\n101010000101\n010101010011\n110000111100\n101011001010\n010001011011\n010000011010\n000010101011\n100110110101\n100111011001\n100111010111\n000101100000\n101110000001\n100100001000\n010111000010\n000101001010\n001110010010\n111011000111\n001110110010\n111010000001\n011000100101\n000111100101\n100000100111\n100110011011\n001011100001\n101010100111\n011001111000\n000011011010\n001011101100\n010011011001\n000111111100\n010001011110\n111111011010\n111010010101\n110000010011\n001001101010\n000101011011\n100111111110\n110010101001\n111000011000\n011100101110\n011100010001\n001101110010\n101000111111\n101011011001\n110111000110\n001000010100\n000111000100\n010000101110\n001100100001\n111100000011\n111011101010\n000001111000\n100100010000\n110110000110\n000010111100\n110110110111\n010000011011\n101110000100\n011100100100\n010111001011\n001011010000\n000111010001\n110010111000\n001011011110\n000001100111\n010000101111\n110001100100\n111000001101\n000110011001\n010000010110\n101010001110\n111000111000\n011111011100\n111001110110\n111100010001\n110101111001\n001001010011\n010001111001\n001101101110\n010011000010\n000100011011\n000001101000\n001110100001\n100011010011\n100000011100\n011001010111\n110011011010\n100110001011\n011001110111\n001010001100\n000111010111\n110111111101\n111001101010\n001110001000\n011100001010\n010011101010\n111011010011\n000011001010\n100101000110\n100101010111\n110010100010\n010100101111\n111011011100\n100011100101\n101111111101\n001001110011\n110111101001\n100100010101\n010101100001\n100011000011\n001010010111\n011001001001\n110001101001\n010011100010\n111000001111\n010101111111\n001001001011\n000111110111\n100110111101\n011011110000\n001001011110\n011010101101\n111011101011\n010001100111\n110100001111\n100010110111\n000000010100\n100000010001\n010011010101\n010011100110\n100011111011\n110110100001\n110000100110\n110101100000\n110001101011\n110110100110\n101111101110\n011010101011\n101001010101\n110110111101\n100111100010\n101100100010\n101011101101\n010011010011\n001111011100\n100101010100\n101010101010\n010000011101\n011100000010\n100111101000\n111111010101\n011010101000\n001010110010\n111110010011\n110111011010\n010010111111\n111001100111\n010101111000\n000111110011\n111101000110\n001011000000\n110100100110\n101001110010\n101111011001\n111110000001\n011101110010\n011000010110\n101011010010\n100110011101\n000010011101\n001111110100\n110011001100\n111110111100\n011001011000\n001110000011\n110001001101\n111110111011\n110000000000\n010000110001\n000100110001\n001000101101\n001100110111\n101011001111\n110011110011\n010011100101\n001001000000\n011110100000\n001010110111\n110101111101\n001111000000\n100011011001\n100000001001\n000010101010\n110000100000\n111111101001\n111010101100\n101100110111\n110100011000\n010011000111\n010010001000\n001011001111\n001001001100\n100010110110\n111100111011\n111100101100\n000111111101\n101110000011\n100001011101\n111101110011\n100100000011\n111110011001\n100010111101\n110001001010\n111111100100\n010000110101\n001100001101\n001001110111\n110110101010\n011110010010\n101011010000\n101101110010\n010010110000\n011110100111\n010111000100\n010100000010\n000011110100\n111001011101\n010111100101\n110010101101\n011100010010\n001110111100\n011111110110\n001110100010\n000001100001\n011011110010\n000010111101\n001011111110\n111110111010\n001010101101\n100011110010\n001111110010\n011001110010\n100110101100\n010111010011\n001000010011\n111110110010\n011000000110\n011111111100\n000111110110\n110001110100\n101110010101\n010000111101\n011011101110\n011010100111\n001010000010\n100001100011\n110001000000\n101111100111\n101111110011\n001101110011\n110001110101\n100101010010\n010101011110\n000011111000\n000100001000\n101001110011\n011100110001\n000000011100\n111110010111\n101011101100\n110011101100\n110101011000\n010111001000\n111100001010\n001000011111\n010100111011\n101010101011\n001110001110\n100011000110\n000101101011\n110011010111\n111001011110\n111010100110\n010001110001\n011010101110\n101011110000\n001101010010\n001010000011\n011001000111\n010001000110\n010110011111\n001111011000\n000010010111\n100011110111\n111100111100\n010101010001\n100011101111\n011101011001\n001011001100\n001111000101\n110111011000\n011001001010\n010000000100\n100110111010\n000000111110\n011100100011\n100100111110\n000010011010\n111000000100\n001110001111\n011000101010\n011100110010\n110101000111\n110110111111\n101110110010\n000110100000\n110100001101\n000111101110\n111000111001\n000111111010\n010110111011\n000101110111\n111000011011\n010110001010\n001011111011\n100100100011\n011110110010\n000111110101\n110110011101\n000011000011\n110011001010\n000100101100\n101100100011\n010111000001\n110101100001\n011110111010\n111100101000\n010000100010\n110011000111\n010011011100\n100110101011\n000100001011\n101111000010\n010000010000\n111110000100\n111100011110\n010100111001\n100000011111\n010111110100\n100100110011\n111101111001\n100010011000\n111110101111\n010111001010\n110000101000\n001111111111\n000111100110\n000011101100\n011010001000\n001011010011\n110011111011\n",
  "brief": {
    "first": "\\--- Day 3: Binary Diagnostic ---\n----------\n\nThe submarine has been making some odd creaking noises, so you ask it to produce a diagnostic report just in case.\n\nThe diagnostic report (your puzzle input) consists of a list of binary numbers which, when decoded properly, can tell you many useful things about the conditions of the submarine. The first parameter to check is the *power consumption*.\n\nYou need to use the binary numbers in the diagnostic report to generate two new binary numbers (called the *gamma rate* and the *epsilon rate*). The power consumption can then be found by multiplying the gamma rate by the epsilon rate.\n\nEach bit in the gamma rate can be determined by finding the *most common bit in the corresponding position* of all numbers in the diagnostic report. For example, given the following diagnostic report:\n\n```\n00100\n11110\n10110\n10111\n10101\n01111\n00111\n11100\n10000\n11001\n00010\n01010\n\n```\n\nConsidering only the first bit of each number, there are five `0` bits and seven `1` bits. Since the most common bit is `1`, the first bit of the gamma rate is `1`.\n\nThe most common second bit of the numbers in the diagnostic report is `0`, so the second bit of the gamma rate is `0`.\n\nThe most common value of the third, fourth, and fifth bits are `1`, `1`, and `0`, respectively, and so the final three bits of the gamma rate are `110`.\n\nSo, the gamma rate is the binary number `10110`, or `*22*` in decimal.\n\nThe epsilon rate is calculated in a similar way; rather than use the most common bit, the least common bit from each position is used. So, the epsilon rate is `01001`, or `*9*` in decimal. Multiplying the gamma rate (`22`) by the epsilon rate (`9`) produces the power consumption, `*198*`.\n\nUse the binary numbers in your diagnostic report to calculate the gamma rate and epsilon rate, then multiply them together. *What is the power consumption of the submarine?* (Be sure to represent your answer in decimal, not binary.)\n\nYour puzzle answer was `775304`.\n\nThe first half of this puzzle is complete! It provides one gold star: \\*\n\n\\--- Part Two ---\n----------\n\nNext, you should verify the *life support rating*, which can be determined by multiplying the *oxygen generator rating* by the *CO2 scrubber rating*.\n\nBoth the oxygen generator rating and the CO2 scrubber rating are values that can be found in your diagnostic report - finding them is the tricky part. Both values are located using a similar process that involves filtering out values until only one remains. Before searching for either rating value, start with the full list of binary numbers from your diagnostic report and *consider just the first bit* of those numbers. Then:\n\n* Keep only numbers selected by the *bit criteria* for the type of rating value for which you are searching. Discard numbers which do not match the bit criteria.\n* If you only have one number left, stop; this is the rating value for which you are searching.\n* Otherwise, repeat the process, considering the next bit to the right.\n\nThe *bit criteria* depends on which type of rating value you want to find:\n\n* To find *oxygen generator rating*, determine the *most common* value (`0` or `1`) in the current bit position, and keep only numbers with that bit in that position. If `0` and `1` are equally common, keep values with a `*1*` in the position being considered.\n* To find *CO2 scrubber rating*, determine the *least common* value (`0` or `1`) in the current bit position, and keep only numbers with that bit in that position. If `0` and `1` are equally common, keep values with a `*0*` in the position being considered.\n\nFor example, to determine the *oxygen generator rating* value using the same example diagnostic report from above:\n\n* Start with all 12 numbers and consider only the first bit of each number. There are more `1` bits (7) than `0` bits (5), so keep only the 7 numbers with a `1` in the first position: `11110`, `10110`, `10111`, `10101`, `11100`, `10000`, and `11001`.\n* Then, consider the second bit of the 7 remaining numbers: there are more `0` bits (4) than `1` bits (3), so keep only the 4 numbers with a `0` in the second position: `10110`, `10111`, `10101`, and `10000`.\n* In the third position, three of the four numbers have a `1`, so keep those three: `10110`, `10111`, and `10101`.\n* In the fourth position, two of the three numbers have a `1`, so keep those two: `10110` and `10111`.\n* In the fifth position, there are an equal number of `0` bits and `1` bits (one each). So, to find the *oxygen generator rating*, keep the number with a `1` in that position: `10111`.\n* As there is only one number left, stop; the *oxygen generator rating* is `10111`, or `*23*` in decimal.\n\nThen, to determine the *CO2 scrubber rating* value from the same example above:\n\n* Start again with all 12 numbers and consider only the first bit of each number. There are fewer `0` bits (5) than `1` bits (7), so keep only the 5 numbers with a `0` in the first position: `00100`, `01111`, `00111`, `00010`, and `01010`.\n* Then, consider the second bit of the 5 remaining numbers: there are fewer `1` bits (2) than `0` bits (3), so keep only the 2 numbers with a `1` in the second position: `01111` and `01010`.\n* In the third position, there are an equal number of `0` bits and `1` bits (one each). So, to find the *CO2 scrubber rating*, keep the number with a `0` in that position: `01010`.\n* As there is only one number left, stop; the *CO2 scrubber rating* is `01010`, or `*10*` in decimal.\n\nFinally, to find the life support rating, multiply the oxygen generator rating (`23`) by the CO2 scrubber rating (`10`) to get `*230*`.\n\nUse the binary numbers in your diagnostic report to calculate the oxygen generator rating and CO2 scrubber rating, then multiply them together. *What is the life support rating of the submarine?* (Be sure to represent your answer in decimal, not binary.)\n\nAnswer:\n\nAlthough it hasn't changed, you can still [get your puzzle input](3/input).",
    "second": "\\--- Day 3: Binary Diagnostic ---\n----------\n\nThe submarine has been making some odd creaking noises, so you ask it to produce a diagnostic report just in case.\n\nThe diagnostic report (your puzzle input) consists of a list of binary numbers which, when decoded properly, can tell you many useful things about the conditions of the submarine. The first parameter to check is the *power consumption*.\n\nYou need to use the binary numbers in the diagnostic report to generate two new binary numbers (called the *gamma rate* and the *epsilon rate*). The power consumption can then be found by multiplying the gamma rate by the epsilon rate.\n\nEach bit in the gamma rate can be determined by finding the *most common bit in the corresponding position* of all numbers in the diagnostic report. For example, given the following diagnostic report:\n\n```\n00100\n11110\n10110\n10111\n10101\n01111\n00111\n11100\n10000\n11001\n00010\n01010\n\n```\n\nConsidering only the first bit of each number, there are five `0` bits and seven `1` bits. Since the most common bit is `1`, the first bit of the gamma rate is `1`.\n\nThe most common second bit of the numbers in the diagnostic report is `0`, so the second bit of the gamma rate is `0`.\n\nThe most common value of the third, fourth, and fifth bits are `1`, `1`, and `0`, respectively, and so the final three bits of the gamma rate are `110`.\n\nSo, the gamma rate is the binary number `10110`, or `*22*` in decimal.\n\nThe epsilon rate is calculated in a similar way; rather than use the most common bit, the least common bit from each position is used. So, the epsilon rate is `01001`, or `*9*` in decimal. Multiplying the gamma rate (`22`) by the epsilon rate (`9`) produces the power consumption, `*198*`.\n\nUse the binary numbers in your diagnostic report to calculate the gamma rate and epsilon rate, then multiply them together. *What is the power consumption of the submarine?* (Be sure to represent your answer in decimal, not binary.)\n\nYour puzzle answer was `775304`.\n\n\\--- Part Two ---\n----------\n\nNext, you should verify the *life support rating*, which can be determined by multiplying the *oxygen generator rating* by the *CO2 scrubber rating*.\n\nBoth the oxygen generator rating and the CO2 scrubber rating are values that can be found in your diagnostic report - finding them is the tricky part. Both values are located using a similar process that involves filtering out values until only one remains. Before searching for either rating value, start with the full list of binary numbers from your diagnostic report and *consider just the first bit* of those numbers. Then:\n\n* Keep only numbers selected by the *bit criteria* for the type of rating value for which you are searching. Discard numbers which do not match the bit criteria.\n* If you only have one number left, stop; this is the rating value for which you are searching.\n* Otherwise, repeat the process, considering the next bit to the right.\n\nThe *bit criteria* depends on which type of rating value you want to find:\n\n* To find *oxygen generator rating*, determine the *most common* value (`0` or `1`) in the current bit position, and keep only numbers with that bit in that position. If `0` and `1` are equally common, keep values with a `*1*` in the position being considered.\n* To find *CO2 scrubber rating*, determine the *least common* value (`0` or `1`) in the current bit position, and keep only numbers with that bit in that position. If `0` and `1` are equally common, keep values with a `*0*` in the position being considered.\n\nFor example, to determine the *oxygen generator rating* value using the same example diagnostic report from above:\n\n* Start with all 12 numbers and consider only the first bit of each number. There are more `1` bits (7) than `0` bits (5), so keep only the 7 numbers with a `1` in the first position: `11110`, `10110`, `10111`, `10101`, `11100`, `10000`, and `11001`.\n* Then, consider the second bit of the 7 remaining numbers: there are more `0` bits (4) than `1` bits (3), so keep only the 4 numbers with a `0` in the second position: `10110`, `10111`, `10101`, and `10000`.\n* In the third position, three of the four numbers have a `1`, so keep those three: `10110`, `10111`, and `10101`.\n* In the fourth position, two of the three numbers have a `1`, so keep those two: `10110` and `10111`.\n* In the fifth position, there are an equal number of `0` bits and `1` bits (one each). So, to find the *oxygen generator rating*, keep the number with a `1` in that position: `10111`.\n* As there is only one number left, stop; the *oxygen generator rating* is `10111`, or `*23*` in decimal.\n\nThen, to determine the *CO2 scrubber rating* value from the same example above:\n\n* Start again with all 12 numbers and consider only the first bit of each number. There are fewer `0` bits (5) than `1` bits (7), so keep only the 5 numbers with a `0` in the first position: `00100`, `01111`, `00111`, `00010`, and `01010`.\n* Then, consider the second bit of the 5 remaining numbers: there are fewer `1` bits (2) than `0` bits (3), so keep only the 2 numbers with a `1` in the second position: `01111` and `01010`.\n* In the third position, there are an equal number of `0` bits and `1` bits (one each). So, to find the *CO2 scrubber rating*, keep the number with a `0` in that position: `01010`.\n* As there is only one number left, stop; the *CO2 scrubber rating* is `01010`, or `*10*` in decimal.\n\nFinally, to find the life support rating, multiply the oxygen generator rating (`23`) by the CO2 scrubber rating (`10`) to get `*230*`.\n\nUse the binary numbers in your diagnostic report to calculate the oxygen generator rating and CO2 scrubber rating, then multiply them together. *What is the life support rating of the submarine?* (Be sure to represent your answer in decimal, not binary.)\n\nYour puzzle answer was `1370737`.\n\nBoth parts of this puzzle are complete! They provide two gold stars: \\*\\*\n\nAt this point, you should [return to your Advent calendar](/2021) and try another puzzle.\n\nIf you still want to see it, you can [get your puzzle input](3/input)."
  }
}